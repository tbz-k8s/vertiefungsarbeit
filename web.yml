---
#Container bzw beschriebung der einzelnen Deployments
apiVersion: apps/v1  # for versions before 1.8.0 use apps/v1beta1
kind: Deployment #MariaDB Containerbeschreibung
metadata:
  name: web-module-mariadb 
  labels: #Variabeln für Erstinitialisierung
    tbz-replace-env: MYSQL_ROOT_PASSWORD
    app: mariadb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mariadb
  template:
    metadata:
      labels:
        app: mariadb
    spec:
      containers:
        - image: mariadb:10.4.10 #Version des Images für MariaDB
          name: mariadb
          ports:
            - containerPort: 3306 #Ports auf denen mariadb ansprechbar ist
              name: mariadb 
          env: # Umgebungsvariabeln welche mitgegeben werden
          - name: MYSQL_ROOT_PASSWORD  #Rootpasswort wird hier vorgemerkt
            value: adminpwspaceholder #durch die Funktion "adminspwplaceholder" wird ein Zufallswert generiert und hinterlegt. In der Bereitsstellunsgsoftware wird diese Variable per Container angezeigt. 
      # Volumes in Host
          volumeMounts:
          - name: "mariadb_data"
            mountPath: /usr/local/mariadb/    
            #Assoziierung des internen Speicherpfades auf den Claim
      volumes:
      - name: "mariadb_data"
        persistentVolumeClaim:
         claimName: mariadb_data #Verweis auf den PersistentVolume
---
apiVersion: apps/v1  # for versions before 1.8.0 use apps/v1beta1
kind: Deployment
metadata:
  name: web-module-apache
  labels:
    app: apache
spec:
  replicas: 1
  selector:
    matchLabels:
      app: apache
  template:
    metadata:
      labels:
        app: apache
    spec:
      containers:
        - image: httpd:2.4 #Version des Images für Apache
          name: apache
          ports:
            - containerPort: 8081 #Ports auf denen Apache ansprechbar ist
              name: apache-zugang
          # Volumes in Host
          volumeMounts:
          - name: "apache_data"
            mountPath: /usr/local/apache2/htdocs/ #Rootverzeichniss
            #Assoziierung des internen Speicherpfades auf den Claim
      volumes:
      - name: "apache_data"
        persistentVolumeClaim:
         claimName: apache_data #Verweis auf den PersistentVolume
---
apiVersion: apps/v1  # for versions before 1.8.0 use apps/v1beta1
kind: Deployment
metadata:
  name: web-module-phpmyadmin
  labels:
    app: phpmyadmin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: phpmyadmin
  template:
    metadata:
      labels:
        app: phpmyadmin
    spec:
      containers:
        - image: phpmyadmin/phpmyadmin:4.8 #Version des Images für phpmyadmin
          name: phpmyadmin
          ports:
            - containerPort: 8080 #Ports auf denen phpmyadmin ansprechbar ist
              name: phpmyadmin
          env: 
            - name: PMA_HOST #definieren der MriaDB Server Adresse, hier mit internem DNS Namen
              value: "mariadb"
      # Volumes in Host
          volumeMounts:
          - name: "phpmyadmin_data"
            mountPath: /etc/phpmyadmin/config.user.inc.php     # Configfile siehe https://hub.docker.com/r/phpmyadmin/phpmyadmin/ 
      volumes:
      - name: "phpmyadmin_data"
        persistentVolumeClaim:
         claimName: phpmyadmin_data  #Verweis auf den PersistentVolume
---
apiVersion: apps/v1  # for versions before 1.8.0 use apps/v1beta1
kind: Deployment
metadata:
  name: web-module-beakerx
  labels:
    app: beakerx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: beakerx
  template:
    metadata:
      labels:
        app: beakerx
    spec:
      containers:
        - image:  :1.3.0 #Version des Images für beakerx
          name: beakerx
          command: [ "start-notebook.sh", "--NotebookApp.token=''" ]
          ports: 
            - containerPort: 80 #Ports auf denen Beakerx / Jupyter ansprechbar ist
              name: beakerx
      # Volumes in Host          
      volumeMounts:
          - name: "jupyter_data"
            mountPath: /home/beakerx/work    #Notebooks und Settings
      volumes:
      - name: "jupyter_data" # Volumesbeschreibung
        persistentVolumeClaim: 
         claimName: jupyter_data  
